// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculation-service.proto

// The name that will be used inside the code to call the service and messages

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalculationRequest struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculationRequest) Reset()         { *m = CalculationRequest{} }
func (m *CalculationRequest) String() string { return proto.CompactTextString(m) }
func (*CalculationRequest) ProtoMessage()    {}
func (*CalculationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b182643f0e529d03, []int{0}
}

func (m *CalculationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationRequest.Unmarshal(m, b)
}
func (m *CalculationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationRequest.Marshal(b, m, deterministic)
}
func (m *CalculationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationRequest.Merge(m, src)
}
func (m *CalculationRequest) XXX_Size() int {
	return xxx_messageInfo_CalculationRequest.Size(m)
}
func (m *CalculationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationRequest proto.InternalMessageInfo

func (m *CalculationRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *CalculationRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type CalculationResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculationResponse) Reset()         { *m = CalculationResponse{} }
func (m *CalculationResponse) String() string { return proto.CompactTextString(m) }
func (*CalculationResponse) ProtoMessage()    {}
func (*CalculationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b182643f0e529d03, []int{1}
}

func (m *CalculationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculationResponse.Unmarshal(m, b)
}
func (m *CalculationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculationResponse.Marshal(b, m, deterministic)
}
func (m *CalculationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculationResponse.Merge(m, src)
}
func (m *CalculationResponse) XXX_Size() int {
	return xxx_messageInfo_CalculationResponse.Size(m)
}
func (m *CalculationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculationResponse proto.InternalMessageInfo

func (m *CalculationResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*CalculationRequest)(nil), "proto.CalculationRequest")
	proto.RegisterType((*CalculationResponse)(nil), "proto.CalculationResponse")
}

func init() { proto.RegisterFile("calculation-service.proto", fileDescriptor_b182643f0e529d03) }

var fileDescriptor_b182643f0e529d03 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x06, 0x5c, 0x42, 0xce, 0x08, 0x35,
	0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x3c, 0x5c, 0x8c, 0x89, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xcc, 0x41, 0x8c, 0x89, 0x20, 0x5e, 0x92, 0x04, 0x13, 0x84, 0x97, 0xa4, 0xa4, 0xcb, 0x25,
	0x8c, 0xa2, 0xa3, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x8c, 0x8b, 0xad, 0x28, 0xb5, 0xb8,
	0x34, 0xa7, 0x04, 0xaa, 0x0f, 0xca, 0x33, 0x9a, 0xca, 0x88, 0x62, 0x43, 0x30, 0xc4, 0x11, 0x42,
	0x36, 0x5c, 0xcc, 0x8e, 0x29, 0x29, 0x42, 0x92, 0x10, 0xd7, 0xe8, 0x61, 0xba, 0x41, 0x4a, 0x0a,
	0x9b, 0x14, 0xd4, 0x32, 0x47, 0x2e, 0x0e, 0xdf, 0xd2, 0x9c, 0x92, 0xcc, 0x82, 0x9c, 0x4a, 0x32,
	0x8d, 0x48, 0x62, 0x03, 0x4b, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0xd4, 0x51, 0x4b,
	0x23, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculationServiceClient is the client API for CalculationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculationServiceClient interface {
	Add(ctx context.Context, in *CalculationRequest, opts ...grpc.CallOption) (*CalculationResponse, error)
	Multiply(ctx context.Context, in *CalculationRequest, opts ...grpc.CallOption) (*CalculationResponse, error)
}

type calculationServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculationServiceClient(cc *grpc.ClientConn) CalculationServiceClient {
	return &calculationServiceClient{cc}
}

func (c *calculationServiceClient) Add(ctx context.Context, in *CalculationRequest, opts ...grpc.CallOption) (*CalculationResponse, error) {
	out := new(CalculationResponse)
	err := c.cc.Invoke(ctx, "/proto.CalculationService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculationServiceClient) Multiply(ctx context.Context, in *CalculationRequest, opts ...grpc.CallOption) (*CalculationResponse, error) {
	out := new(CalculationResponse)
	err := c.cc.Invoke(ctx, "/proto.CalculationService/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculationServiceServer is the server API for CalculationService service.
type CalculationServiceServer interface {
	Add(context.Context, *CalculationRequest) (*CalculationResponse, error)
	Multiply(context.Context, *CalculationRequest) (*CalculationResponse, error)
}

// UnimplementedCalculationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculationServiceServer struct {
}

func (*UnimplementedCalculationServiceServer) Add(ctx context.Context, req *CalculationRequest) (*CalculationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedCalculationServiceServer) Multiply(ctx context.Context, req *CalculationRequest) (*CalculationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiply not implemented")
}

func RegisterCalculationServiceServer(s *grpc.Server, srv CalculationServiceServer) {
	s.RegisterService(&_CalculationService_serviceDesc, srv)
}

func _CalculationService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculationServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CalculationService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculationServiceServer).Add(ctx, req.(*CalculationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculationService_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculationServiceServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CalculationService/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculationServiceServer).Multiply(ctx, req.(*CalculationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CalculationService",
	HandlerType: (*CalculationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _CalculationService_Add_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _CalculationService_Multiply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculation-service.proto",
}
